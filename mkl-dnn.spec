#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
Name     : mkl-dnn
Version  : 1.0.2
Release  : 20
URL      : https://github.com/intel/mkl-dnn/archive/v1.0.2/mkl-dnn-1.0.2.tar.gz
Source0  : https://github.com/intel/mkl-dnn/archive/v1.0.2/mkl-dnn-1.0.2.tar.gz
Summary  : IntelÂ® Math Kernel Library for Deep Neural Networks
Group    : Development/Tools
License  : Apache-2.0 BSD-3-Clause
Requires: mkl-dnn-lib = %{version}-%{release}
Requires: mkl-dnn-license = %{version}-%{release}
BuildRequires : buildreq-cmake
BuildRequires : cmake
BuildRequires : doxygen
BuildRequires : git
BuildRequires : glibc-dev
BuildRequires : opencl-headers-dev
Patch1: no-native.patch

%description
Intel(R) Math Kernel Library for Deep Neural Networks (Intel(R) MKL-DNN)
========================================================================

%package dev
Summary: dev components for the mkl-dnn package.
Group: Development
Requires: mkl-dnn-lib = %{version}-%{release}
Provides: mkl-dnn-devel = %{version}-%{release}
Requires: mkl-dnn = %{version}-%{release}
Requires: mkl-dnn = %{version}-%{release}

%description dev
dev components for the mkl-dnn package.


%package doc
Summary: doc components for the mkl-dnn package.
Group: Documentation

%description doc
doc components for the mkl-dnn package.


%package lib
Summary: lib components for the mkl-dnn package.
Group: Libraries
Requires: mkl-dnn-license = %{version}-%{release}

%description lib
lib components for the mkl-dnn package.


%package license
Summary: license components for the mkl-dnn package.
Group: Default

%description license
license components for the mkl-dnn package.


%prep
%setup -q -n mkl-dnn-1.0.2
%patch1 -p1

%build
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1566088097
mkdir -p clr-build
pushd clr-build
# -Werror is for werrorists
export GCC_IGNORE_WERROR=1
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
export CFLAGS="$CFLAGS -O3 -falign-functions=32 -ffat-lto-objects -flto=4 -fno-math-errno -fno-semantic-interposition -fno-trapping-math "
export FCFLAGS="$CFLAGS -O3 -falign-functions=32 -ffat-lto-objects -flto=4 -fno-math-errno -fno-semantic-interposition -fno-trapping-math "
export FFLAGS="$CFLAGS -O3 -falign-functions=32 -ffat-lto-objects -flto=4 -fno-math-errno -fno-semantic-interposition -fno-trapping-math "
export CXXFLAGS="$CXXFLAGS -O3 -falign-functions=32 -ffat-lto-objects -flto=4 -fno-math-errno -fno-semantic-interposition -fno-trapping-math "
%cmake ..
make  %{?_smp_mflags} VERBOSE=1
popd
mkdir -p clr-build-avx2
pushd clr-build-avx2
# -Werror is for werrorists
export GCC_IGNORE_WERROR=1
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
export CFLAGS="$CFLAGS -O3 -falign-functions=32 -ffat-lto-objects -flto=4 -fno-math-errno -fno-semantic-interposition -fno-trapping-math -march=haswell "
export FCFLAGS="$CFLAGS -O3 -falign-functions=32 -ffat-lto-objects -flto=4 -fno-math-errno -fno-semantic-interposition -fno-trapping-math -march=haswell "
export FFLAGS="$CFLAGS -O3 -falign-functions=32 -ffat-lto-objects -flto=4 -fno-math-errno -fno-semantic-interposition -fno-trapping-math -march=haswell "
export CXXFLAGS="$CXXFLAGS -O3 -falign-functions=32 -ffat-lto-objects -flto=4 -fno-math-errno -fno-semantic-interposition -fno-trapping-math -march=haswell "
export CFLAGS="$CFLAGS -march=haswell -m64"
export CXXFLAGS="$CXXFLAGS -march=haswell -m64"
%cmake ..
make  %{?_smp_mflags} VERBOSE=1
popd
mkdir -p clr-build-avx512
pushd clr-build-avx512
# -Werror is for werrorists
export GCC_IGNORE_WERROR=1
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
export CFLAGS="$CFLAGS -O3 -falign-functions=32 -ffat-lto-objects -flto=4 -fno-math-errno -fno-semantic-interposition -fno-trapping-math -march=skylake-avx512 "
export FCFLAGS="$CFLAGS -O3 -falign-functions=32 -ffat-lto-objects -flto=4 -fno-math-errno -fno-semantic-interposition -fno-trapping-math -march=skylake-avx512 "
export FFLAGS="$CFLAGS -O3 -falign-functions=32 -ffat-lto-objects -flto=4 -fno-math-errno -fno-semantic-interposition -fno-trapping-math -march=skylake-avx512 "
export CXXFLAGS="$CXXFLAGS -O3 -falign-functions=32 -ffat-lto-objects -flto=4 -fno-math-errno -fno-semantic-interposition -fno-trapping-math -march=skylake-avx512 "
export CFLAGS="$CFLAGS -march=skylake-avx512 -m64 "
export CXXFLAGS="$CXXFLAGS -march=skylake-avx512 -m64 "
%cmake ..
make  %{?_smp_mflags} VERBOSE=1
popd

%install
export SOURCE_DATE_EPOCH=1566088097
rm -rf %{buildroot}
mkdir -p %{buildroot}/usr/share/package-licenses/mkl-dnn
cp LICENSE %{buildroot}/usr/share/package-licenses/mkl-dnn/LICENSE
cp doc/assets/mathjax/LICENSE %{buildroot}/usr/share/package-licenses/mkl-dnn/doc_assets_mathjax_LICENSE
cp src/cpu/jit_utils/jitprofiling/LICENSE.BSD %{buildroot}/usr/share/package-licenses/mkl-dnn/src_cpu_jit_utils_jitprofiling_LICENSE.BSD
cp src/cpu/xbyak/COPYRIGHT %{buildroot}/usr/share/package-licenses/mkl-dnn/src_cpu_xbyak_COPYRIGHT
cp tests/gtests/gtest/LICENSE %{buildroot}/usr/share/package-licenses/mkl-dnn/tests_gtests_gtest_LICENSE
pushd clr-build-avx512
%make_install_avx512  || :
popd
pushd clr-build-avx2
%make_install_avx2  || :
popd
pushd clr-build
%make_install
popd

%files
%defattr(-,root,root,-)

%files dev
%defattr(-,root,root,-)
/usr/include/*.h
/usr/include/*.hpp
/usr/lib64/cmake/mkldnn/mkldnn-config-version.cmake
/usr/lib64/cmake/mkldnn/mkldnn-config.cmake
/usr/lib64/cmake/mkldnn/mkldnn-targets-relwithdebinfo.cmake
/usr/lib64/cmake/mkldnn/mkldnn-targets.cmake
/usr/lib64/haswell/avx512_1/libmkldnn.so
/usr/lib64/haswell/libmkldnn.so
/usr/lib64/libmkldnn.so

%files doc
%defattr(0644,root,root,0755)
/usr/share/doc/mkldnn/LICENSE

%files lib
%defattr(-,root,root,-)
/usr/lib64/haswell/avx512_1/libmkldnn.so.1
/usr/lib64/haswell/avx512_1/libmkldnn.so.1.0
/usr/lib64/haswell/libmkldnn.so.1
/usr/lib64/haswell/libmkldnn.so.1.0
/usr/lib64/libmkldnn.so.1
/usr/lib64/libmkldnn.so.1.0

%files license
%defattr(0644,root,root,0755)
/usr/share/package-licenses/mkl-dnn/LICENSE
/usr/share/package-licenses/mkl-dnn/doc_assets_mathjax_LICENSE
/usr/share/package-licenses/mkl-dnn/src_cpu_jit_utils_jitprofiling_LICENSE.BSD
/usr/share/package-licenses/mkl-dnn/src_cpu_xbyak_COPYRIGHT
/usr/share/package-licenses/mkl-dnn/tests_gtests_gtest_LICENSE
